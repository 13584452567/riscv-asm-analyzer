import type { InstructionSpec } from "../instruction-types"

// RISC-V Atomic Extension (RVA) Instructions
// Based on RISC-V A Atomic Extension Specification

// Load-Reserved/Store-Conditional Instructions (include aq/rl variants)
const loadReservedStoreConditionalInstructions: InstructionSpec[] = [
    {
        name: "lr.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b00010 << 2, // base (aq=0, rl=0)
        operandPattern: "rd_rs1",
        minXlen: 32,
    },
    {
        name: "lr.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00010 << 2) | 0b01,
        operandPattern: "rd_rs1",
        minXlen: 32,
    },
    {
        name: "lr.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00010 << 2) | 0b10,
        operandPattern: "rd_rs1",
        minXlen: 32,
    },
    {
        name: "lr.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00010 << 2) | 0b11,
        operandPattern: "rd_rs1",
        minXlen: 32,
    },
    {
        name: "lr.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b00010 << 2,
        operandPattern: "rd_rs1",
        minXlen: 64,
    },
    {
        name: "lr.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00010 << 2) | 0b01,
        operandPattern: "rd_rs1",
        minXlen: 64,
    },
    {
        name: "lr.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00010 << 2) | 0b10,
        operandPattern: "rd_rs1",
        minXlen: 64,
    },
    {
        name: "lr.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00010 << 2) | 0b11,
        operandPattern: "rd_rs1",
        minXlen: 64,
    },
    {
        name: "sc.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b00011 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "sc.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00011 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "sc.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00011 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "sc.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00011 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "sc.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b00011 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "sc.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00011 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "sc.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00011 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "sc.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00011 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
]

// Atomic Memory Operation Instructions (include aq/rl variants)
const atomicMemoryOperationInstructions: InstructionSpec[] = [
    // Atomic Swap
    {
        name: "amoswap.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b00001 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoswap.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00001 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoswap.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00001 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoswap.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00001 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoswap.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b00001 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoswap.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00001 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoswap.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00001 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoswap.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00001 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    // Atomic Add
    {
        name: "amoadd.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b00000 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoadd.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00000 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoadd.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00000 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoadd.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00000 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoadd.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b00000 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoadd.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00000 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoadd.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00000 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoadd.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00000 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    // Atomic And
    {
        name: "amoand.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b01100 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoand.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b01100 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoand.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b01100 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoand.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b01100 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoand.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b01100 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoand.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b01100 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoand.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b01100 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoand.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b01100 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    // Atomic Or
    {
        name: "amoor.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b01000 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoor.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b01000 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoor.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b01000 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoor.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b01000 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoor.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b01000 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoor.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b01000 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoor.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b01000 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoor.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b01000 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    // Atomic Xor
    {
        name: "amoxor.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b00100 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoxor.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00100 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoxor.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00100 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoxor.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b00100 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amoxor.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b00100 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoxor.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00100 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoxor.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00100 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amoxor.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b00100 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    // Atomic Min Signed
    {
        name: "amomin.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b10000 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomin.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b10000 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomin.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b10000 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomin.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b10000 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomin.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b10000 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amomin.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b10000 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amomin.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b10000 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amomin.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b10000 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    // Atomic Max Signed
    {
        name: "amomax.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b10100 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomax.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b10100 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomax.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b10100 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomax.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b10100 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomax.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b10100 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amomax.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b10100 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amomax.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b10100 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amomax.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b10100 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    // Atomic Min Unsigned
    {
        name: "amominu.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b11000 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amominu.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b11000 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amominu.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b11000 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amominu.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b11000 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amominu.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b11000 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amominu.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b11000 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amominu.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b11000 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amominu.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b11000 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    // Atomic Max Unsigned
    {
        name: "amomaxu.w",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: 0b11100 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomaxu.w.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b11100 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomaxu.w.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b11100 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomaxu.w.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b010,
        funct7: (0b11100 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 32,
    },
    {
        name: "amomaxu.d",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: 0b11100 << 2,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amomaxu.d.rl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b11100 << 2) | 0b01,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amomaxu.d.aq",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b11100 << 2) | 0b10,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
    {
        name: "amomaxu.d.aqrl",
        format: "R",
        opcode: 0b0101111,
        funct3: 0b011,
        funct7: (0b11100 << 2) | 0b11,
        operandPattern: "rd_rs1_rs2",
        minXlen: 64,
    },
]

export const rvaInstructions: InstructionSpec[] = [
    ...loadReservedStoreConditionalInstructions,
    ...atomicMemoryOperationInstructions,
]
